{
  "name" : "MG_POC_DataShow",
  "options" : {
    "v" : 2,
    "showGridWhileEditing" : false,
    "isLaunchable" : true,
    "description" : "",
    "isExpertMode" : true,
    "hasSidebar" : true,
    "sidebar" : {
      "type" : "VerticalContainer",
      "v" : 11,
      "name" : "_Sidebar_",
      "x" : 0,
      "y" : 0,
      "h" : 386.007812,
      "w" : 136,
      "borderWidth" : 0,
      "borderColor" : "Default",
      "heightPolicy" : 0,
      "widthPolicy" : 2,
      "isSelectable" : false,
      "isDraggable" : false,
      "isSelectableOnly" : true,
      "actionMenuTopic" : null,
      "actionMenuLabel" : null,
      "vertGravity" : 4,
      "horzGravity" : 4,
      "vertWeight" : 1,
      "innerMargin" : 5,
      "vertMargin" : 5,
      "horzMargin" : 5,
      "packTight" : true,
      "kids" : [ {
        "type" : "TextAsBtn",
        "v" : 11,
        "name" : "MenuButton1",
        "x" : 5,
        "y" : 5,
        "h" : 20,
        "w" : 126,
        "borderWidth" : 0,
        "borderColor" : "Default",
        "heightPolicy" : 0,
        "widthPolicy" : 0,
        "isSelectable" : true,
        "isDraggable" : true,
        "actionMenuTopic" : null,
        "actionMenuLabel" : null,
        "vertGravity" : 4,
        "horzGravity" : 0,
        "text" : "历史静态轨迹图",
        "fontSize" : 18,
        "fontFace" : "Arial,Verdana",
        "fontStyle" : "normal",
        "fontWeight" : "normal"
      }, {
        "type" : "TextAsBtn",
        "v" : 11,
        "name" : "MenuButton2",
        "x" : 5,
        "y" : 30,
        "h" : 20,
        "w" : 126,
        "borderWidth" : 0,
        "borderColor" : "Default",
        "heightPolicy" : 0,
        "widthPolicy" : 0,
        "isSelectable" : true,
        "isDraggable" : true,
        "actionMenuTopic" : null,
        "actionMenuLabel" : null,
        "vertGravity" : 4,
        "horzGravity" : 0,
        "text" : "实时动态轨迹图",
        "fontSize" : 18,
        "fontFace" : "Arial,Verdana",
        "fontStyle" : "normal",
        "fontWeight" : "normal"
      } ],
      "bgColor" : "#dddddd"
    },
    "theme" : {
      "v" : 2,
      "name" : "light",
      "label" : "浅色",
      "backgroundColor" : "#f0f2f5",
      "foregroundColor" : "#000000",
      "borderColor" : "#000000",
      "accentColor1" : "#040fdb"
    }
  },
  "models" : {
    "dataObjects" : {
      "__GLOBAL__" : {
        "properties" : { }
      },
      "__PARAMETERS__" : {
        "properties" : { }
      }
    },
    "dataStreams" : [ ]
  },
  "views" : {
    "Start" : {
      "fields" : [ ],
      "bodyChildren" : [ ],
      "footerChildren" : [ ],
      "responseTopic" : "/my/response/topic",
      "data" : {
        "properties" : { }
      }
    },
    "staticMap" : {
      "fields" : [ ],
      "bodyChildren" : [ {
        "type" : "BaiduMapWidget",
        "v" : 11,
        "name" : "BaiduMapViewer1",
        "x" : 0,
        "y" : 0,
        "h" : 399,
        "w" : 1030,
        "borderWidth" : 0,
        "borderColor" : "Default",
        "heightPolicy" : 1,
        "widthPolicy" : 1,
        "isSelectable" : true,
        "isDraggable" : true,
        "actionMenuTopic" : null,
        "actionMenuLabel" : null,
        "vertGravity" : 4,
        "horzGravity" : 4,
        "dataType" : null,
        "propertyName" : null,
        "operation" : "insert",
        "dataStreamUUID" : "",
        "dataStreamPropertyList" : [ ],
        "dataStreamGroupedByFiltersString" : "",
        "naturalKey" : null,
        "_mapType" : "normal",
        "_pinCenter" : true
      }, {
        "type" : "PIDateTime",
        "v" : 11,
        "name" : "时间输入域1",
        "x" : 117,
        "y" : 396,
        "h" : 54,
        "w" : 224,
        "borderWidth" : 0,
        "borderColor" : "Default",
        "heightPolicy" : 0,
        "widthPolicy" : 2,
        "isSelectable" : true,
        "isDraggable" : true,
        "actionMenuTopic" : null,
        "actionMenuLabel" : null,
        "vertGravity" : 4,
        "horzGravity" : 4,
        "binding" : "page.data.staDate",
        "innerMargin" : 0,
        "vertMargin" : 10,
        "horzMargin" : 10,
        "label" : "",
        "labelFontSize" : 14,
        "labelAlign" : "center",
        "labelStyle" : "plain",
        "labelColor" : "#000000",
        "optional" : false
      }, {
        "type" : "PIInlineButton",
        "v" : 11,
        "name" : "btn",
        "x" : 360,
        "y" : 418.984375,
        "h" : 50,
        "w" : 144,
        "borderWidth" : 0,
        "borderColor" : "Default",
        "heightPolicy" : 0,
        "widthPolicy" : 2,
        "isSelectable" : true,
        "isDraggable" : true,
        "actionMenuTopic" : null,
        "actionMenuLabel" : null,
        "vertGravity" : 4,
        "horzGravity" : 4,
        "innerMargin" : 0,
        "vertMargin" : 10,
        "horzMargin" : 10,
        "label" : "",
        "labelFontSize" : 14,
        "labelAlign" : "center",
        "labelStyle" : "plain",
        "labelColor" : "#000000",
        "buttonLabel" : "查询整体轨迹",
        "value" : 100,
        "buttonLabelSize" : 18,
        "buttonLabelStyle" : "plain",
        "buttonLabelColor" : "#000000",
        "buttonBackgroundColor" : "#d0d0d0"
      }, {
        "type" : "PIInlineButton",
        "v" : 11,
        "name" : "play",
        "x" : 545.95703125,
        "y" : 415.95703125,
        "h" : 50,
        "w" : 144,
        "borderWidth" : 0,
        "borderColor" : "Default",
        "heightPolicy" : 0,
        "widthPolicy" : 2,
        "isSelectable" : true,
        "isDraggable" : true,
        "actionMenuTopic" : null,
        "actionMenuLabel" : null,
        "vertGravity" : 4,
        "horzGravity" : 4,
        "innerMargin" : 0,
        "vertMargin" : 10,
        "horzMargin" : 10,
        "label" : "",
        "labelFontSize" : 14,
        "labelAlign" : "center",
        "labelStyle" : "plain",
        "labelColor" : "#000000",
        "buttonLabel" : "播放历史轨迹",
        "value" : 100,
        "buttonLabelSize" : 18,
        "buttonLabelStyle" : "plain",
        "buttonLabelColor" : "#000000",
        "buttonBackgroundColor" : "#d0d0d0"
      }, {
        "type" : "PIInlineButton",
        "v" : 11,
        "name" : "按钮4",
        "x" : 745,
        "y" : 417.98828125,
        "h" : 50,
        "w" : 71,
        "borderWidth" : 0,
        "borderColor" : "Default",
        "heightPolicy" : 0,
        "widthPolicy" : 2,
        "isSelectable" : true,
        "isDraggable" : true,
        "actionMenuTopic" : null,
        "actionMenuLabel" : null,
        "vertGravity" : 4,
        "horzGravity" : 4,
        "innerMargin" : 0,
        "vertMargin" : 10,
        "horzMargin" : 10,
        "label" : "",
        "labelFontSize" : 14,
        "labelAlign" : "center",
        "labelStyle" : "plain",
        "labelColor" : "#000000",
        "buttonLabel" : "请按",
        "value" : 100,
        "buttonLabelSize" : 18,
        "buttonLabelStyle" : "plain",
        "buttonLabelColor" : "#000000",
        "buttonBackgroundColor" : "#d0d0d0"
      }, {
        "type" : "PIDateTime",
        "v" : 11,
        "name" : "时间输入域2",
        "x" : 118,
        "y" : 447,
        "h" : 54,
        "w" : 224,
        "borderWidth" : 0,
        "borderColor" : "Default",
        "heightPolicy" : 0,
        "widthPolicy" : 2,
        "isSelectable" : true,
        "isDraggable" : true,
        "actionMenuTopic" : null,
        "actionMenuLabel" : null,
        "vertGravity" : 4,
        "horzGravity" : 4,
        "binding" : "page.data.endDate",
        "innerMargin" : 0,
        "vertMargin" : 10,
        "horzMargin" : 10,
        "label" : "",
        "labelFontSize" : 14,
        "labelAlign" : "center",
        "labelStyle" : "plain",
        "labelColor" : "#000000",
        "optional" : false
      }, {
        "type" : "PIInputString",
        "v" : 11,
        "name" : "文本输入域1",
        "x" : 143.96484375,
        "y" : 507.98828125,
        "h" : 72,
        "w" : 120,
        "borderWidth" : 0,
        "borderColor" : "Default",
        "heightPolicy" : 0,
        "widthPolicy" : 2,
        "isSelectable" : true,
        "isDraggable" : true,
        "actionMenuTopic" : null,
        "actionMenuLabel" : null,
        "vertGravity" : 4,
        "horzGravity" : 4,
        "binding" : "page.data.phoneNu",
        "innerMargin" : 0,
        "vertMargin" : 10,
        "horzMargin" : 10,
        "label" : "手机号码",
        "labelFontSize" : 14,
        "labelAlign" : "center",
        "labelStyle" : "plain",
        "labelColor" : "#000000",
        "placeholder" : "",
        "optional" : false,
        "default" : "",
        "isPassword" : false
      } ],
      "footerChildren" : [ ],
      "responseTopic" : "",
      "data" : {
        "properties" : {
          "endDate" : {
            "type" : "DateTime",
            "defaultLabel" : "endDate"
          },
          "phoneNum" : {
            "type" : "String",
            "defaultLabel" : "phoneNum",
            "defaultValue" : "15830555191"
          },
          "staDate" : {
            "type" : "DateTime",
            "defaultLabel" : "staDate"
          }
        }
      }
    },
    "dynamicMap" : {
      "fields" : [ ],
      "bodyChildren" : [ {
        "type" : "BaiduMapWidget",
        "v" : 11,
        "name" : "BaiduMapViewer2",
        "x" : 84.9921875,
        "y" : 9,
        "h" : 492.00390625,
        "w" : 908,
        "borderWidth" : 0,
        "borderColor" : "Default",
        "heightPolicy" : 1,
        "widthPolicy" : 1,
        "isSelectable" : true,
        "isDraggable" : true,
        "actionMenuTopic" : null,
        "actionMenuLabel" : null,
        "vertGravity" : 4,
        "horzGravity" : 4,
        "dataType" : null,
        "propertyName" : null,
        "operation" : "insert",
        "dataStreamUUID" : "",
        "dataStreamPropertyList" : [ ],
        "dataStreamGroupedByFiltersString" : "",
        "naturalKey" : null,
        "_mapType" : "normal",
        "_pinCenter" : true
      }, {
        "type" : "PIInputString",
        "v" : 11,
        "name" : "文本输入域2",
        "x" : 233.984375,
        "y" : 514.98046875,
        "h" : 54,
        "w" : 120,
        "borderWidth" : 0,
        "borderColor" : "Default",
        "heightPolicy" : 0,
        "widthPolicy" : 2,
        "isSelectable" : true,
        "isDraggable" : true,
        "actionMenuTopic" : null,
        "actionMenuLabel" : null,
        "vertGravity" : 4,
        "horzGravity" : 4,
        "binding" : "page.data.phoneNu",
        "innerMargin" : 0,
        "vertMargin" : 10,
        "horzMargin" : 10,
        "label" : "",
        "labelFontSize" : 14,
        "labelAlign" : "center",
        "labelStyle" : "plain",
        "labelColor" : "#000000",
        "placeholder" : "",
        "optional" : false,
        "default" : "",
        "isPassword" : false
      }, {
        "type" : "PIInlineButton",
        "v" : 11,
        "name" : "按钮3",
        "x" : 421.9921875,
        "y" : 515,
        "h" : 50,
        "w" : 71,
        "borderWidth" : 0,
        "borderColor" : "Default",
        "heightPolicy" : 0,
        "widthPolicy" : 2,
        "isSelectable" : true,
        "isDraggable" : true,
        "actionMenuTopic" : null,
        "actionMenuLabel" : null,
        "vertGravity" : 4,
        "horzGravity" : 4,
        "innerMargin" : 0,
        "vertMargin" : 10,
        "horzMargin" : 10,
        "label" : "",
        "labelFontSize" : 14,
        "labelAlign" : "center",
        "labelStyle" : "plain",
        "labelColor" : "#000000",
        "buttonLabel" : "请按",
        "value" : 100,
        "buttonLabelSize" : 18,
        "buttonLabelStyle" : "plain",
        "buttonLabelColor" : "#000000",
        "buttonBackgroundColor" : "#d0d0d0"
      }, {
        "type" : "PIInlineButton",
        "v" : 11,
        "name" : "按钮6",
        "x" : 534.98046875,
        "y" : 515.99609375,
        "h" : 50,
        "w" : 71,
        "borderWidth" : 0,
        "borderColor" : "Default",
        "heightPolicy" : 0,
        "widthPolicy" : 2,
        "isSelectable" : true,
        "isDraggable" : true,
        "actionMenuTopic" : null,
        "actionMenuLabel" : null,
        "vertGravity" : 4,
        "horzGravity" : 4,
        "innerMargin" : 0,
        "vertMargin" : 10,
        "horzMargin" : 10,
        "label" : "",
        "labelFontSize" : 14,
        "labelAlign" : "center",
        "labelStyle" : "plain",
        "labelColor" : "#000000",
        "buttonLabel" : "请按",
        "value" : 100,
        "buttonLabelSize" : 18,
        "buttonLabelStyle" : "plain",
        "buttonLabelColor" : "#000000",
        "buttonBackgroundColor" : "#d0d0d0"
      } ],
      "footerChildren" : [ ],
      "responseTopic" : "",
      "data" : {
        "properties" : { }
      }
    }
  },
  "controllers" : {
    "client" : {
      "customCode" : "//历史轨迹图定时器\nvar timer;\n\n/*var points_h =[];\n\nfunction play(){\n    //alert(index);\n   point = points[index];  \n   car.setLabel(label);\n   map.addOverlay(car);\n    //alert(\"11\");\n   if(index > 0 && index < 5) {\n       map.addOverlay(new BMap.Polyline([points[index - 1], point], {strokeColor: \"red\", strokeWeight: 1, strokeOpacity: 1}));\n   }else if(index >= 5){\n       map.addOverlay(new BMap.Polyline([points[index - 1], point], {strokeColor: \"blue\", strokeWeight: 1, strokeOpacity: 1}));\n   }\n    \n    //alert(\"2\");\n    //alert(JSON.stringify(point));\n    label.setContent(\"经度: \" + point.lng + \"<br>纬度: \" + point.lat + \"<br>时间: \" +resultData[index].creDate);\n    car.setPosition(point);\n    //map.panTo(point);\n    //alert(\"3\");\n    index++;\n    \n    //alert(\"4\");\n    if(index < points.length) {\n        //timer = window.setTimeout(play(), 1000);\n       timer=setTimeout(function(){play();},1000);\n    } else {\n   //alert(\"5\");\n        map.panTo(point);\n    }   \n}\n*/\n\n"
    },
    "page" : {
      "Start" : {
        "widgets" : { }
      },
      "staticMap" : {
        "widgets" : {
          "btn" : {
            "onClick" : "if(!page.data.staDate){\n    alert(\"请输入开始时间\");\n     return false;\n}else if(!page.data.endDate){\n    alert(\"请输入结束时间\");\n     return false;\n}\n//获取页面的地图\nvar map = client.getWidget(\"BaiduMapViewer1\").platformWidget._map;\n//清除页面\nmap.clearOverlays();\nvar car;   //汽车图标\nvar label = new BMap.Label(\"启点\", {offset: new BMap.Size(-20, -20)}); //信息标签\nvar centerPoint;\n//var timer;     //定时器 \nif(timer) {\n     window.clearTimeout(timer);\n   }\n\n\nvar index = 0; //记录播放到第几个point\nvar points = [];\nvar point;\nvar resultData =[];\nmap.centerAndZoom(new BMap.Point(116.31267267128290,39.945955945945946), 13); \n\nmap.enableScrollWheelZoom();\nmap.addControl(new BMap.NavigationControl());\nmap.addControl(new BMap.ScaleControl());\n//map.addControl(new BMap.OverviewMapControl({isOpen: true}));\n\nvar sy = new BMap.Symbol(BMap_Symbol_SHAPE_BACKWARD_OPEN_ARROW, {\n            scale: 0.6,//图标缩放大小\n            strokeColor:'#fff',//设置矢量图标的线填充颜色\n            strokeWeight: '1',//设置线宽\n        });\nvar icons = new BMap.IconSequence(sy, '10', '30');\n\nvar icon = new BMap.Icon('https://dev.vantiq.cn/ui/docs/NS/intEval/images/icons/car.png', new BMap.Size(20, 32), {\n\n    anchor: new BMap.Size(10, 30),\n\n    infoWindowAnchor: new BMap.Size(10, 0)\n\n});\nvar staDate = page.data.staDate;\nvar endDate = page.data.endDate;\nvar http = new Http();\nhttp.setVantiqUrlForSystemResource(\"procedures\");\nhttp.setVantiqHeaders();\nvar args = {staDate:staDate,endDate:endDate,phoneNum:\"\"};\nif(timer) {\n     window.clearTimeout(timer);\n   }\n\nhttp.execute(args,\"mgGetStaticMapPoints\",function(response){\n    resultData = response;\n\tconsole.log(\"SUCCESS: \" + JSON.stringify(response));   \n\tresponse.forEach(function(item){         \n\tvar lng = item.y;\n\tvar lat = item.x;       \n\tvar count = 0;\n\t//points.push({\"lng\": lng, \"lat\": lat, \"count\": count});\n\tvar point = new BMap.Point(lng,lat);\n\tpoints.push(point);\n\tvar mkr = new BMap.Marker(point, {\n     //title: item.APMAC + \"\\n人\" + item.count\n   });\n        //map.addOverlay(mkr);\n    });\n  //alert(JSON.stringify(points));\n   map.centerAndZoom(points[0].lng,points[0].lat,17);\n   //car = new BMap.Marker(points[0],{icon: icon,title: 'Car', rotation:0});\n\tif(points.length>0){\n      map.panTo(points[0]);\n        init();\n      //play();\n    }\n\n},function(errors){\n    client.showHttpErrors(errors,\"Executing 'getNumberOfGuestsAtEachAP'\");\n}); \nfunction init(){\n    map.addOverlay(new BMap.Polyline(points, {strokeColor: \"blue\", strokeWeight: 3, strokeOpacity: 0.8/*,icons:[icons]*/}));\n    points.forEach(function(item){\n      car = new BMap.Marker(item,{icon: icon,title: 'Car', rotation:0});\n      map.addOverlay(car);  \n    });\n    \n}\nfunction play(){\n    //alert(index);\n   point = points[index];  \n   car = new BMap.Marker(point,{icon: icon,title: 'Car', rotation:0});\n   //car.setLabel(label);\n   map.addOverlay(car);\n    //alert(\"11\");\n   if(index > 0 && index < 5) {\n       map.addOverlay(new BMap.Polyline([points[index - 1], point], {strokeColor: \"red\", strokeWeight: 1, strokeOpacity: 1}));\n   }else if(index >= 5){\n       map.addOverlay(new BMap.Polyline([points[index - 1], point], {strokeColor: \"blue\", strokeWeight: 1, strokeOpacity: 1}));\n   }\n    \n    //alert(\"2\");\n    //alert(JSON.stringify(point));\n    label.setContent(\"经度: \" + point.lng + \"<br>纬度: \" + point.lat + \"<br>时间: \" +resultData[index].creDate);\n    car.setPosition(point);\n    //map.panTo(point);\n    //alert(\"3\");\n    index++;\n    \n    //alert(\"4\");\n    if(index < points.length) {\n        //timer = window.setTimeout(play(), 1000);\n       timer=setTimeout(function(){play();},1000);\n    } else {\n   //alert(\"5\");\n        map.panTo(point);\n    }   \n}\n\n\n"
          },
          "play" : {
            "onClick" : "if(!page.data.staDate){\n    alert(\"请输入开始时间\");\n     return false;\n}else if(!page.data.endDate){\n    alert(\"请输入结束时间\");\n     return false;\n}\n//获取页面的地图\nvar map = client.getWidget(\"BaiduMapViewer1\").platformWidget._map;\n//清除页面\nmap.clearOverlays();\nvar car;   //汽车图标\nvar label = new BMap.Label(\"启点\", {offset: new BMap.Size(-20, -20)}); //信息标签\nvar centerPoint;\n//var timer;     //定时器\nif(timer) {\n     window.clearTimeout(timer);\n   }\nvar icon = new BMap.Icon('https://dev.vantiq.cn/ui/docs/NS/intEval/images/icons/car.png', new BMap.Size(20, 32), {\n\n    anchor: new BMap.Size(10, 30),\n\n    infoWindowAnchor: new BMap.Size(10, 0)\n\n});\n\n\nvar index = 0; //记录播放到第几个point\nvar points = [];\nvar point;\nvar resultData =[];\nmap.centerAndZoom(new BMap.Point(116.31267267128290,39.945955945945946), 13); \n\nmap.enableScrollWheelZoom();\nmap.addControl(new BMap.NavigationControl());\nmap.addControl(new BMap.ScaleControl());\n//map.addControl(new BMap.OverviewMapControl({isOpen: true}));\nvar staDate = page.data.staDate;\nvar endDate = page.data.endDate;\nvar http = new Http();\nhttp.setVantiqUrlForSystemResource(\"procedures\");\nhttp.setVantiqHeaders();\nvar args = {staDate:staDate,endDate:endDate,phoneNum:\"\"};\nif(timer) {\n     window.clearTimeout(timer);\n   }\n\nhttp.execute(args,\"mgGetStaticMapPoints\",function(response){\n    resultData = response;\n    //resultData = getProcessingData(resultData);\n\tconsole.log(\"SUCCESS: \" + JSON.stringify(response));   \n\tresponse.forEach(function(item){         \n\tvar lng = item.y;\n\tvar lat = item.x;       \n\tvar count = 0;\n\t//points.push({\"lng\": lng, \"lat\": lat, \"count\": count});\n\tvar point = new BMap.Point(lng,lat);\n\tpoints.push(point);\n\tvar mkr = new BMap.Marker(point, {\n     //title: item.APMAC + \"\\n人\" + item.count\n   });\n        //map.addOverlay(mkr);\n    });\n  //alert(JSON.stringify(points));\n   map.centerAndZoom(points[0].lng,points[0].lat,17);\n   car = new BMap.Marker(points[0],{icon: icon,title: 'Car',rotation: 0});\n\tif(points.length>0){\n      map.panTo(points[0]);\n        //init();\n      play();\n    }\n\n},function(errors){\n    client.showHttpErrors(errors,\"Executing 'getNumberOfGuestsAtEachAP'\");\n}); \nfunction init(){\n    map.addOverlay(new BMap.Polyline(points, {strokeColor: \"blue\", strokeWeight: 5, strokeOpacity: 1}));\n}\nfunction play(){\n    //alert(index);\n   point = points[index];  \n   car.setLabel(label);\n   map.addOverlay(car);\n    //alert(\"11\");\n   if(index > 0 && index < 5) {\n       map.addOverlay(new BMap.Polyline([points[index - 1], point], {strokeColor: \"red\", strokeWeight: 1, strokeOpacity: 1}));\n   }else if(index >= 5){\n       map.addOverlay(new BMap.Polyline([points[index - 1], point], {strokeColor: \"blue\", strokeWeight: 1, strokeOpacity: 1}));\n   }\n    \n    //alert(\"2\");\n    //alert(JSON.stringify(point));\n    label.setContent(\"经度: \" + point.lng + \"<br>纬度: \" + point.lat + \"<br>时间: \" +resultData[index].creDate);\n    car.setPosition(point);\n    //map.panTo(point);\n    //alert(\"3\");\n    index++;\n    \n    //alert(\"4\");\n    if(index < points.length) {\n        //timer = window.setTimeout(play(), 1000);\n       timer=setTimeout(function(){play();},100);\n    } else {\n   //alert(\"5\");\n        map.panTo(point);\n    }   \n}\n\n\n//过滤无效经纬度\n\nfunction getProcessingData(jsonData){\n\n         var sarr = [];\n\n         var mapArr = [];\n\n         for(var i=0;i<jsonData.length;i++){\n\n                            try{\n\n                            var lat1 = jsonData[i].x;\n\n                            var lng1 = jsonData[i].y;       \n\n                            var lat2 = jsonData[i+1].x;\n\n                            var lng2 = jsonData[i+1].y ;\n\n                            var dis = GetDistance(lat1,lng1,lat2,lng2);\n\n                            if(dis<2 && dis > 0){ \n\n                                     mapArr.push(jsonData[i]);\n\n                                     mapArr.push(jsonData[i+1]);                               \n\n                            }\n\n                   }catch(err){}                       \n\n         }\n\n \n\n         return mapArr;        \n\n}\n\n \n\n//进行经纬度转换为距离的计算\n\nfunction Rad(d){\n\n         return d * Math.PI / 180.0;//经纬度转换成三角函数中度分表形式。\n\n}\n\n//计算距离，参数分别为第一点的纬度，经度；第二点的纬度，经度\n\nfunction GetDistance(lat1,lng1,lat2,lng2){\n\n         var radLat1 = Rad(lat1);\n\n         var radLat2 = Rad(lat2);\n\n         var a = radLat1 - radLat2;\n\n         var  b = Rad(lng1) - Rad(lng2);\n\n         var s = 2 * Math.asin(Math.sqrt(Math.pow(Math.sin(a/2),2) +\n\n         Math.cos(radLat1)*Math.cos(radLat2)*Math.pow(Math.sin(b/2),2)));\n\n         s = s *6378.137 ;// EARTH_RADIUS;\n\n         s = Math.round(s * 10000) / 10000; //输出为公里\n\n         //s=s.toFixed(4);\n\n         return s;\n\n}\n\n\n"
          },
          "按钮4" : {
            "onClick" : "if(!page.data.staDate){\n    alert(\"请输入开始时间\");\n     return false;\n}else if(!page.data.endDate){\n    alert(\"请输入结束时间\");\n     return false;\n}\n//获取页面的地图\nvar map = client.getWidget(\"BaiduMapViewer1\").platformWidget._map;\n//清除页面\nmap.clearOverlays();\nvar car;   //汽车图标\nvar label = new BMap.Label(\"启点\", {offset: new BMap.Size(-20, -20)}); //信息标签\nvar centerPoint;\n//var timer;     //定时器 \nif(timer) {\n     window.clearTimeout(timer);\n   }\n\n\nvar index = 0; //记录播放到第几个point\nvar points = [];\nvar point;\nvar resultData =[];\nmap.centerAndZoom(new BMap.Point(116.31267267128290,39.945955945945946), 13); \n\nmap.enableScrollWheelZoom();\nmap.addControl(new BMap.NavigationControl());\nmap.addControl(new BMap.ScaleControl());\n//map.addControl(new BMap.OverviewMapControl({isOpen: true}));\n\nvar sy = new BMap.Symbol(BMap_Symbol_SHAPE_BACKWARD_OPEN_ARROW, {\n            scale: 0.6,//图标缩放大小\n            strokeColor:'#fff',//设置矢量图标的线填充颜色\n            strokeWeight: '1',//设置线宽\n        });\nvar icons = new BMap.IconSequence(sy, '10', '30');\n\nvar icon = new BMap.Icon('https://dev.vantiq.cn/ui/docs/NS/intEval/images/icons/car.png', new BMap.Size(20, 32), {\n\n    anchor: new BMap.Size(10, 30),\n\n    infoWindowAnchor: new BMap.Size(10, 0)\n\n});\nvar staDate = page.data.staDate;\nvar endDate = page.data.endDate;\nvar http = new Http();\nhttp.setVantiqUrlForSystemResource(\"procedures\");\nhttp.setVantiqHeaders();\nvar args = {staDate:staDate,endDate:endDate,phoneNum:\"\"};\nif(timer) {\n     window.clearTimeout(timer);\n   }\n\nhttp.execute(args,\"mgGetStaticMapPoints\",function(response){\n    resultData = response;\n\tconsole.log(\"SUCCESS: \" + JSON.stringify(response));   \n\tresponse.forEach(function(item){         \n\tvar lng = item.y;\n\tvar lat = item.x;       \n\tvar count = 0;\n\t//points.push({\"lng\": lng, \"lat\": lat, \"count\": count});\n\tvar point = new BMap.Point(lng,lat);\n\tpoints.push(point);\n\tvar mkr = new BMap.Marker(point, {\n     //title: item.APMAC + \"\\n人\" + item.count\n   });\n        //map.addOverlay(mkr);\n    });\n  //alert(JSON.stringify(points));\n   map.centerAndZoom(points[0].lng,points[0].lat,17);\n   //car = new BMap.Marker(points[0],{icon: icon,title: 'Car', rotation:0});\n\tif(points.length>0){\n      map.panTo(points[0]);\n        init();\n      //play();\n    }\n\n},function(errors){\n    client.showHttpErrors(errors,\"Executing 'getNumberOfGuestsAtEachAP'\");\n}); \nfunction init(){\n    map.addOverlay(new BMap.Polyline(points, {strokeColor: \"blue\", strokeWeight: 3, strokeOpacity: 0.8/*,icons:[icons]*/}));\n    points.forEach(function(item){\n      car = new BMap.Marker(item,{icon: icon,title: 'Car', rotation:0});\n      map.addOverlay(car);  \n    });\n    \n}\nfunction play(){\n    //alert(index);\n   point = points[index];  \n   car = new BMap.Marker(point,{icon: icon,title: 'Car', rotation:0});\n   //car.setLabel(label);\n   map.addOverlay(car);\n    //alert(\"11\");\n   if(index > 0 && index < 5) {\n       map.addOverlay(new BMap.Polyline([points[index - 1], point], {strokeColor: \"red\", strokeWeight: 1, strokeOpacity: 1}));\n   }else if(index >= 5){\n       map.addOverlay(new BMap.Polyline([points[index - 1], point], {strokeColor: \"blue\", strokeWeight: 1, strokeOpacity: 1}));\n   }\n    \n    //alert(\"2\");\n    //alert(JSON.stringify(point));\n    label.setContent(\"经度: \" + point.lng + \"<br>纬度: \" + point.lat + \"<br>时间: \" +resultData[index].creDate);\n    car.setPosition(point);\n    //map.panTo(point);\n    //alert(\"3\");\n    index++;\n    \n    //alert(\"4\");\n    if(index < points.length) {\n        //timer = window.setTimeout(play(), 1000);\n       timer=setTimeout(function(){play();},1000);\n    } else {\n   //alert(\"5\");\n        map.panTo(point);\n    }   \n}\n\n\n"
          }
        }
      },
      "dynamicMap" : {
        "widgets" : {
          "按钮3" : {
            "onClick" : "\n//获取页面的地图\nvar map = client.getWidget(\"BaiduMapViewer2\").platformWidget._map;\n//清除页面\nmap.clearOverlays();\nvar car;   //汽车图标\nvar label = new BMap.Label(\"启点\", {offset: new BMap.Size(-20, -20)}); //信息标签\nvar centerPoint;\n//var timer;     //定时器\nif(timer) {\n     window.clearTimeout(timer);\n   }\n\n\nvar index = 0; //记录播放到第几个point\nvar points = [];\nvar point;\nvar resultData =[];\nmap.centerAndZoom(new BMap.Point(116.31267267128290,39.945955945945946), 13); \n\nmap.enableScrollWheelZoom();\nmap.addControl(new BMap.NavigationControl());\nmap.addControl(new BMap.ScaleControl());\n//map.addControl(new BMap.OverviewMapControl({isOpen: true}));\nvar staDate = page.data.staDate;\nvar endDate = page.data.endDate;\nvar http = new Http();\nhttp.setVantiqUrlForSystemResource(\"procedures\");\nhttp.setVantiqHeaders();\nvar args = {phoneNum:page.data.phoneNum};\nif(timer) {\n     window.clearTimeout(timer);\n   }\n\nhttp.execute(args,\"mgGetDynamicMapPoints\",function(response){\n    resultData = response;\n\tconsole.log(\"SUCCESS: \" + JSON.stringify(response));   \n\tresponse.forEach(function(item){         \n\tvar lng = item.y;\n\tvar lat = item.x;       \n\tvar count = 0;\n\t//points.push({\"lng\": lng, \"lat\": lat, \"count\": count});\n\tvar point = new BMap.Point(lng,lat);\n\tpoints.push(point);\n\tvar mkr = new BMap.Marker(point, {\n     //title: item.APMAC + \"\\n人\" + item.count\n   });\n        //map.addOverlay(mkr);\n    });\n  //alert(JSON.stringify(points));\n   map.centerAndZoom(points[0].lng,points[0].lat,17);\n   car = new BMap.Marker(points[0]);\n\tif(points.length>0){\n      map.panTo(points[0]);\n        //init();\n      play();\n    }\n\n},function(errors){\n    client.showHttpErrors(errors,\"Executing 'getNumberOfGuestsAtEachAP'\");\n}); \nfunction init(){\n    //{strokeColor:\"blue\", strokeWeight:8, strokeOpacity:0.5,icons:[draw_line_direction(8)]}\n    map.addOverlay(new BMap.Polyline(points, {strokeColor: \"blue\", strokeWeight: 5, strokeOpacity: 1,icons:[draw_line_direction(8)]}));\n}\nfunction play(){\n    //alert(index);\n   point = points[index];  \n   car.setLabel(label);\n   map.addOverlay(car);\n    //alert(\"11\");\n   if(index > 0 && index < 5) {\n       map.addOverlay(new BMap.Polyline([points[index - 1], point], {strokeColor: \"red\", strokeWeight: 1, strokeOpacity: 1}));\n   }else if(index >= 5){\n       map.addOverlay(new BMap.Polyline([points[index - 1], point], {strokeColor: \"blue\", strokeWeight: 1, strokeOpacity: 1}));\n   }\n    \n    //alert(\"2\");\n    //alert(JSON.stringify(point));\n    label.setContent(\"经度: \" + point.lng + \"<br>纬度: \" + point.lat + \"<br>时间: \" +resultData[index].creDate);\n    car.setPosition(point);\n    //map.panTo(point);\n    //alert(\"3\");\n    index++;\n    \n    //alert(\"4\");\n    if(index < points.length) {\n        //timer = window.setTimeout(play(), 1000);\n       timer=setTimeout(function(){play();},1000);\n    } else {\n   //alert(\"5\");\n        map.panTo(point);\n    }   \n}\n\nfunction draw_line_direction(weight) {\n    var icons=new BMap.IconSequence(\n      new BMap.Symbol('M0 -5 L-5 -2 L0 -4 L5 -2 Z', {\n        scale: weight/10,\n        strokeWeight: 1,\n        rotation: 0,\n        fillColor: 'white',\n        fillOpacity: 1,\n        strokeColor:'white'\n      }),'100%','5%',false);\n    return icons;\n  }\n"
          },
          "按钮6" : {
            "onClick" : "//获取页面的地图\nvar map = client.getWidget(\"BaiduMapViewer2\").platformWidget._map;\n//清除页面\nmap.clearOverlays();\nmap.centerAndZoom(new BMap.Point(103.388611,35.563611), 5); //初始显示中国。\nmap.enableScrollWheelZoom(true);     //开启鼠标滚轮缩放\n//数据准备,\nvar points = [];//原始点信息数组\nvar bPoints = [];//百度化坐标数组。用于更新显示范围。\nvar http = new Http();\nhttp.setVantiqUrlForSystemResource(\"procedures\");\nhttp.setVantiqHeaders();\nvar sy = new BMap.Symbol(BMap_Symbol_SHAPE_BACKWARD_OPEN_ARROW, {\n        scale: 0.6,//图标缩放大小\n        strokeColor:'#fff',//设置矢量图标的线填充颜色\n        strokeWeight: '2',//设置线宽\n    });\n    var icons = new BMap.IconSequence(sy, '10', '30');\n    var icon = new BMap.Icon('https://dev.vantiq.cn/ui/docs/NS/intEval/images/icons/car.png', new BMap.Size(20, 32), {\n\n        anchor: new BMap.Size(10, 30),\n\n        infoWindowAnchor: new BMap.Size(10, 0)\n\n    });\n    //添加线\n    function addLine(points){\n\n        var linePoints = [],pointsLen = points.length,i,polyline;\n        if(pointsLen < 1){\n            return;\n        }\n        // 创建标注对象并添加到地图\n        for(i = 0;i <pointsLen;i++){\n            linePoints.push(new BMap.Point(points[i].lng,points[i].lat));\n        }\n\n        //polyline = new BMap.Polyline(linePoints, {strokeColor:\"red\", strokeWeight:2, strokeOpacity:0.5});   //创建折线\n        var polyline1 =new BMap.Polyline(linePoints, {\n            enableEditing: false,//是否启用线编辑，默认为false\n            enableClicking: true,//是否响应点击事件，默认为true\n            //icons:[icons],\n            strokeWeight:'8',//折线的宽度，以像素为单位\n            strokeOpacity: 0.8,//折线的透明度，取值范围0 - 1\n            strokeColor:\"#18a45b\" //折线颜色\n        });\n\n        map.addOverlay(polyline1);          //增加折线\n    }\n    //随机生成新的点，加入到轨迹中。\n    function dynamicLine(point){\n\n        /*var lng = 100+getRandom(40);\n        var lat = 35+getRandom(30);\n        var id = getRandom(1000);\n        var point = {\"lng\":lng,\"lat\":lat,\"status\":1,\"id\":id};*/\n        // for the marker\n        var marker = new BMap.Marker(point, {\n\n            icon: icon,\n\n            title: 'Car',\n\n            rotation: Math.random()*360\n\n        });\n        map.addOverlay(marker);\n        var makerPoints = [];\n        var newLinePoints = [];\n        var len;\n\n        makerPoints.push(point);\n       // addMarker(makerPoints);//增加对应该的轨迹点\n        points.push(point);\n        bPoints.push(new BMap.Point(point.lng,point.lat));\n        len = points.length;\n        newLinePoints = points.slice(len-2, len);//最后两个点用来画线。\n\n        addLine(newLinePoints);//增加轨迹线\n        setZoom(bPoints);\n        //setTimeout(dynamicLine, 1000);\n\n    }\n\n    // 获取随机数\n    function getRandom(n){\n        return Math.floor(Math.random()*n+1);\n    }\n    //根据点信息实时更新地图显示范围，让轨迹完整显示。设置新的中心点和显示级别\n    function setZoom(bPoints){\n        //var view = map.getViewport(eval(bPoints));\n       // var mapZoom = view.zoom;\n       // var centerPoint = view.center;\n        //map.centerAndZoom(centerPoint,mapZoom);\n    }\n\n    //dynamicLine();\n    var index =0;\n    selectData();\n\nfunction selectData(){\n   /* var dataPoints =[];\n    var dataPoint;\n\t var args = {phoneNum:page.data.phoneNum};\n    http.execute(args,\"mgGetDynamicMapPoints\",function(response){   \n\t console.log(\"SUCCESS: \" + JSON.stringify(response));   \n\t response.forEach(function(item){         \n\tvar lng = item.y;\n\tvar lat = item.x;       \n\t//points.push({\"lng\": lng, \"lat\": lat, \"count\": count});\n   dataPoint ={\"lng\": lng, \"lat\": lat};\n//   dynamicLine(dataPoint);\n   dataPoints.push(dataPoint);    \n\t//var point = new BMap.Point(lng,lat);\n\t//points.push(point);\t\n\tsetTimeout(selectData, 5000);\n    },function(errors){\n        client.showHttpErrors(errors,\"Executing 'mgGetDynamicMapPoints'\");\n    }); \n  });\n  //return dataPoints;\n */  if(index < 5){\n     alert(index);\n        var aa = {\"lng\":100+getRandom(40),\"lat\":35+getRandom(30)};\n         dynamicLine(aa);\n        setTimeout(selectData, 5000);\n     index++;\n    }\n }"
          }
        }
      }
    },
    "dataStream" : { },
    "sidebar" : {
      "widgets" : {
        "MenuButton1" : {
          "onClick" : "client.goToPage(\"staticMap\");"
        },
        "MenuButton2" : {
          "onClick" : "client.goToPage(\"dynamicMap\");"
        }
      }
    }
  },
  "ars_properties" : {
    "tags" : [ "#launchable" ]
  }
}